{"version":3,"sources":["images/github.png","images/twitter.svg","images/linkedin.svg","images/medium.png","images/telegram.svg","images/sparky.jpg","images/youtubeImage.JPG","components/header.js","components/footer.js","components/table.js","views/projects.js","views/home.js","components/blog.js","views/blogs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","id","to","href","target","Footer","src","require","alt","MuiVirtualizedTable","getRowClassName","index","props","classes","onRowClick","clsx","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","columns","rowHeight","TableCell","component","tableCell","noClick","variant","style","height","align","numeric","headerRenderer","label","headerHeight","fontWeight","this","tableProps","width","gridStyle","direction","table","rowClassName","map","dataKey","other","key","headerProps","React","PureComponent","defaultProps","VirtualizedTable","withStyles","theme","display","alignItems","boxSizing","flip","paddingRight","undefined","cursor","backgroundColor","palette","grey","flex","ReactVirtualizedTable","data","Paper","rowCount","length","rowGetter","Projects","useState","languages","setLanguages","useEffect","axios","get","headers","Accept","then","res","catch","error","console","log","Home","class","Blog","title","thumbnail","link","pubDate","Blogs","setData","items","blog","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83786923.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.8a116e0a.png\";","module.exports = __webpack_public_path__ + \"static/media/twitter.4f41a984.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.ab46037f.svg\";","module.exports = __webpack_public_path__ + \"static/media/medium.57c7706f.png\";","module.exports = __webpack_public_path__ + \"static/media/telegram.a1994736.svg\";","module.exports = __webpack_public_path__ + \"static/media/sparky.bd75899c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/youtubeImage.8f9f0bd3.JPG\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"headerSection\">\n      <li id=\"name\">Sparky Evangelista</li>\n      <ul className=\"gotos\">\n        <li className=\"nav\">\n          <Link to=\"/my-portfolio\">Home</Link>\n        </li>\n        <li className=\"nav\">\n          <Link to=\"/blogs\">Blogs</Link>\n        </li>\n\n        <li className=\"nav\">\n          <a\n            href=\"https://drive.google.com/file/d/19tCyEFs4sOtZSrho0C6R5YI204dDlejf/view?usp=sharing\"\n            target=\"_blank\"\n            id=\"resume\"\n          >\n            Resume\n          </a>\n        </li>\n\n        {/* <li className=\"nav\">\n          <Link to=\"/youtube\">YouTube</Link>\n        </li> */}\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"../styles/footer.css\";\nconst Footer = () => {\n  return (\n    <section className=\"footerSection headerSection\">\n      <li id=\"name\">Sparky Evangelista</li>\n      <ul className=\"gotos\">\n        <li className=\"items\">\n          <a href=\"https://github.com/Sparkadelic177\">\n            <img\n              className=\"item-image\"\n              src={require(\"../images/github.png\")}\n              alt=\"instagram\"\n            />\n          </a>\n        </li>\n\n        <li className=\"items\">\n          <a href=\"https://twitter.com/sparkyBrown_E\">\n            <img\n              className=\"item-image\"\n              src={require(\"../images/twitter.svg\")}\n              alt=\"twitter\"\n            />\n          </a>\n        </li>\n        <li className=\"items\">\n          <a href=\"https://linkedin.com/in/sparkyevangelista/\">\n            <img\n              className=\"item-image\"\n              src={require(\"../images/linkedin.svg\")}\n              alt=\"linkedin\"\n            />\n          </a>\n        </li>\n        <li className=\"items\">\n          <a href=\"https://medium.com/@sparkyevangelista\">\n            <img\n              className=\"item-image medium\"\n              src={require(\"../images/medium.png\")}\n              alt=\"medium\"\n            />\n          </a>\n        </li>\n        <li className=\"items\">\n          <a href=\"mailto:sparkyevangelista@gmail.com\">\n            <img\n              className=\"item-image\"\n              src={require(\"../images/telegram.svg\")}\n              alt=\"telegram\"\n            />\n          </a>\n        </li>\n      </ul>\n    </section>\n  );\n};\n\nexport default Footer;\n","// import React from \"react\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableContainer from \"@material-ui/core/TableContainer\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Paper from \"@material-ui/core/Paper\";\n// import TableFooter from \"@material-ui/core/TableFooter\";\n// import TablePagination from \"@material-ui/core/TablePagination\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import FirstPageIcon from \"@material-ui/icons/FirstPage\";\n// import KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\n// import KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\n// import LastPageIcon from \"@material-ui/icons/LastPage\";\n\n// const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//     backgroundColor: theme.palette.common.black,\n//     color: theme.palette.common.white,\n//     fontWeight: 900,\n//     width: \"33%\",\n//   },\n//   body: {\n//     fontSize: 14,\n//     fontWeight: \"bolder\",\n//   },\n// }))(TableCell);\n\n// const useStyles1 = makeStyles((theme) => ({\n//   root: {\n//     flexShrink: 0,\n//     marginLeft: theme.spacing(2.5),\n//   },\n// }));\n\n// function TablePaginationActions(props) {\n//   const classes = useStyles1();\n//   const theme = useTheme();\n//   const { count, page, rowsPerPage, onChangePage } = props;\n\n//   const handleFirstPageButtonClick = (event) => {\n//     onChangePage(event, 0);\n//   };\n\n//   const handleBackButtonClick = (event) => {\n//     onChangePage(event, page - 1);\n//   };\n\n//   const handleNextButtonClick = (event) => {\n//     onChangePage(event, page + 1);\n//   };\n\n//   const handleLastPageButtonClick = (event) => {\n//     onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n//   };\n\n//   return (\n//     <div className={classes.root}>\n//       <IconButton\n//         onClick={handleFirstPageButtonClick}\n//         disabled={page === 0}\n//         aria-label=\"first page\"\n//       >\n//         {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n//       </IconButton>\n//       <IconButton\n//         onClick={handleBackButtonClick}\n//         disabled={page === 0}\n//         aria-label=\"previous page\"\n//       >\n//         {theme.direction === \"rtl\" ? (\n//           <KeyboardArrowRight />\n//         ) : (\n//           <KeyboardArrowLeft />\n//         )}\n//       </IconButton>\n//       <IconButton\n//         onClick={handleNextButtonClick}\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//         aria-label=\"next page\"\n//       >\n//         {theme.direction === \"rtl\" ? (\n//           <KeyboardArrowLeft />\n//         ) : (\n//           <KeyboardArrowRight />\n//         )}\n//       </IconButton>\n//       <IconButton\n//         onClick={handleLastPageButtonClick}\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//         aria-label=\"last page\"\n//       >\n//         {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n//       </IconButton>\n//     </div>\n//   );\n// }\n\n// const RepoTable = ({ data, language }) => {\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n//   // const emptyRows =\n//   //   rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//     setPage(0);\n//   };\n\n//   return (\n//     <TableContainer className=\"table_container\" component={Paper}>\n//       <h2 style={{ textAlign: \"center\" }}>{language} Projects</h2>\n//       <Table stickyHeader aria-label=\"sticky table\">\n//         <TableHead className=\"tableHead\">\n//           <TableRow>\n//             <StyledTableCell align=\"left\">Repo Name</StyledTableCell>\n//             <StyledTableCell align=\"center\">Repo Description</StyledTableCell>\n//             <StyledTableCell align=\"center\">Repo Url</StyledTableCell>\n//           </TableRow>\n//         </TableHead>\n//         <TableBody>\n//           {(rowsPerPage > 0\n//             ? data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//             : data\n//           ).map((object) => {\n//             return (\n//               <TableRow key={object.name}>\n//                 <TableCell align=\"left\">{object.name}</TableCell>\n//                 <TableCell align=\"center\">{object.description}</TableCell>\n//                 <TableCell align=\"center\">\n//                   <a href={object.html_url} target=\"_blank\">\n//                     Repo\n//                   </a>\n//                 </TableCell>\n//               </TableRow>\n//             );\n//           })}\n//         </TableBody>\n//         <TableFooter>\n//           <TableRow>\n//             <TablePagination\n//               rowsPerPageOptions={[5, { label: \"All\", value: -1 }]}\n//               colSpan={3}\n//               count={data.length}\n//               rowsPerPage={rowsPerPage}\n//               page={page}\n//               SelectProps={{\n//                 inputProps: { \"aria-label\": \"rows per page\" },\n//                 native: true,\n//               }}\n//               onChangePage={handleChangePage}\n//               onChangeRowsPerPage={handleChangeRowsPerPage}\n//               ActionsComponent={TablePaginationActions}\n//             />\n//           </TableRow>\n//         </TableFooter>\n//       </Table>\n//     </TableContainer>\n//   );\n// };\n\n// export default RepoTable;\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\n\nconst styles = (theme) => ({\n  flexContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\",\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    \"& .ReactVirtualized__Table__headerRow\": {\n      flip: false,\n      paddingRight: theme.direction === \"rtl\" ? \"0px !important\" : undefined,\n    },\n  },\n  tableRow: {\n    cursor: \"pointer\",\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: \"initial\",\n  },\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 80,\n  };\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? \"right\"\n            : \"left\"\n        }\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(\n          classes.tableCell,\n          classes.flexContainer,\n          classes.noClick\n        )}\n        variant=\"head\"\n        style={{ height: headerHeight, fontWeight: 900 }}\n        align={columns[columnIndex].numeric || false ? \"right\" : \"left\"}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight,\n      ...tableProps\n    } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            gridStyle={{\n              direction: \"inherit\",\n            }}\n            headerHeight={headerHeight}\n            className={classes.table}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={(headerProps) =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number,\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\nexport default function ReactVirtualizedTable({ data }) {\n  return (\n    <Paper style={{ height: 400, width: \"100%\" }}>\n      <VirtualizedTable\n        rowCount={data.length}\n        rowGetter={({ index }) => data[index]}\n        columns={[\n          {\n            width: 300,\n            label: \"Project Name\",\n            dataKey: \"name\",\n          },\n          {\n            width: 600,\n            label: \"Description\",\n            dataKey: \"description\",\n          },\n          {\n            width: 500,\n            label: \"URL\",\n            dataKey: \"url\",\n          },\n        ]}\n      />\n    </Paper>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/projects.css\";\nimport Table from \"../components/table\";\nimport axios from \"axios\";\n\n//here I wull use the githib api and have new projects show up all the time\n//we need the name, description, html_url\n\nconst Projects = () => {\n  const [languages, setLanguages] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.github.com/users/Sparkadelic177/repos\", {\n        headers: { Accept: \"application/vnd.github.v3+json\" },\n      })\n      .then((res) => {\n        setLanguages([...res.data]);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <div className=\"content_container\">\n      <section className=\"tableSection\">\n        <Table data={languages} />\n      </section>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport Project from \"./projects\";\nimport \"../styles/home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"home_container\">\n      <section class=\"heroSection\">\n        <img\n          src={require(\"../images/sparky.jpg\")}\n          alt=\"Sparky Brown Evangelista\"\n          class=\"sparky\"\n        />\n        <div class=\"heroText\">\n          <h1>\n            Spark\n            <span id=\"dot\">.</span> y{\" \"}\n          </h1>\n          <br />\n          <h3>/'spärkē/</h3>\n          <br />\n          <p class=\"definition\">\n            adjective\n            <span class=\"language\">British</span>\n          </p>\n          <p>1. lively and high-spirited.</p>\n          <p>\"His sparky personality\"</p>\n          <br />\n          <p class=\"definition\">\n            noun\n            <span class=\"language\">Informal British</span>\n          </p>\n          <p>\n            {\" \"}\n            A<span class=\"crossedout\">Electrian</span> Developer{\" \"}\n          </p>\n        </div>\n      </section>\n      <section class=\"aboutmeSection\">\n        <div class=\"aboutme-text\">\n          <h1>Yes you guessed it right, my real name is Sparky.</h1>\n          <br />\n          <p class=\"text\">\n            I am a Application Developer at NYC Department of Citywide\n            Administrative Services (DCAS) and I love the art of developing and\n            creating things from scratch and being able to solve complex\n            problems. I am fueled with passion by innovation and ground breaking\n            technologies in hopes that I get to work them someday.\n          </p>\n        </div>\n      </section>\n      <section className=\"projectSection\">\n        <h2>Projects</h2>\n        <Project />\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"../styles/blog.css\";\n\nconst Blog = ({ title, thumbnail, pubDate, link }) => {\n  return (\n    <a className=\"blog_container\" href={link} target=\"_blank\">\n      <h2 className=\"blog_title\">{title}</h2>\n      <div className=\"image_container\">\n        <img className=\"blog_image\" src={thumbnail} alt={title} />\n      </div>\n      {/* <p className=\"blog_date\">{pubDate}</p> */}\n    </a>\n  );\n};\n\nexport default Blog;\n","import React, { useState, useEffect } from \"react\";\nimport Blog from \"../components/blog\";\nimport axios from \"axios\";\nimport \"../styles/blogs.css\";\nconst Blogs = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@sparkyevangelista\"\n      )\n      .then((res) => setData(res.data.items))\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <div id=\"blogs_container\">\n      {data.map((blog, index) => {\n        return (\n          <Blog\n            key={index}\n            title={blog.title}\n            pubDate={blog.pubDate}\n            link={blog.link}\n            thumbnail={blog.thumbnail}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Blogs;\n","import React from \"react\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport { Home, Blogs } from \"./views\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  console.log();\n  return (\n    <Router className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/my-portfolio\" component={Home} />\n        <Route exact path=\"/blogs\" component={Blogs} />\n        {/* <Route exact path=\"/youtube\" component={YouTube} /> */}\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}